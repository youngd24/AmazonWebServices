---
  ##############################################################################################
  ### Standard Research VPC CloudFormation Template
  ###
  ### Be sure to convert this to JSON for deployment, yaml2json works
  ###
  ##############################################################################################
  AWSTemplateFormatVersion: "2010-09-09"
  Resources: 
    zonevpcawschicagoboothedu: 
      Type: "AWS::Route53::HostedZone"
      Properties: 
        Name: "vpcXXX.aws.chicagobooth.edu."
    researchvpc: 
      Type: "AWS::EC2::VPC"
      Properties: 
        CidrBlock: "10.227.XXX.0/24"
        InstanceTenancy: "default"
        EnableDnsSupport: "true"
        EnableDnsHostnames: "true"
        Tags: 
          - 
            Key: "Name"
            Value: "Research VPC XXX"
    subnetpublic1a: 
      Type: "AWS::EC2::Subnet"
      Properties: 
        CidrBlock: "10.227.XXX.0/25"
        AvailabilityZone: "us-east-1a"
        VpcId: 
          Ref: "researchvpc"
        Tags: 
          - 
            Key: "Name"
            Value: "Research Public 1a"
    subnetpublic1b: 
      Type: "AWS::EC2::Subnet"
      Properties: 
        CidrBlock: "10.227.XXX.128/25"
        AvailabilityZone: "us-east-1b"
        VpcId: 
          Ref: "researchvpc"
        Tags: 
          - 
            Key: "Name"
            Value: "Research Public 1b"
    researchigw: 
      Type: "AWS::EC2::InternetGateway"
      Properties: 
        Tags: 
          - 
            Key: "Name"
            Value: "ResearchIG"
    researchdopt01: 
      Type: "AWS::EC2::DHCPOptions"
      Properties: 
        Tags: 
          - 
            Key: "Name"
            Value: "ResearchDopt"
        DomainName: "ec2.internal"
        DomainNameServers: 
          - "AmazonProvidedDNS"
    networkacl001: 
      Type: "AWS::EC2::NetworkAcl"
      Properties: 
        VpcId: 
          Ref: "researchvpc"
    researchmainroutetable: 
      Type: "AWS::EC2::RouteTable"
      Properties: 
        VpcId: 
          Ref: "researchvpc"
        Tags: 
          - 
            Key: "Name"
            Value: "Main"
    s3researchvpcdocs: 
      Type: "AWS::S3::Bucket"
      Properties: 
        AccessControl: "PublicRead"
        BucketName: "booth-vpcXXX-docs"
        VersioningConfiguration: 
          Status: "Enabled"
    sgdefault: 
      Type: "AWS::EC2::SecurityGroup"
      Properties: 
        GroupDescription: "default VPC security group"
        VpcId: 
          Ref: "researchvpc"
    sgResearchVPCAccessSG: 
      Type: "AWS::EC2::SecurityGroup"
      Properties: 
        GroupDescription: "Group to allow inbound access to the VPC"
        VpcId: 
          Ref: "researchvpc"
        Tags: 
          - 
            Key: "Name"
            Value: "ResearchVPCAccessSG"
    acl7: 
      Type: "AWS::EC2::NetworkAclEntry"
      Properties: 
        CidrBlock: "0.0.0.0/0"
        Egress: "true"
        Protocol: "-1"
        RuleAction: "allow"
        RuleNumber: "100"
        NetworkAclId: 
          Ref: "networkacl001"
    acl8: 
      Type: "AWS::EC2::NetworkAclEntry"
      Properties: 
        CidrBlock: "0.0.0.0/0"
        Protocol: "-1"
        RuleAction: "allow"
        RuleNumber: "100"
        NetworkAclId: 
          Ref: "networkacl001"
    subnetacl7: 
      Type: "AWS::EC2::SubnetNetworkAclAssociation"
      Properties: 
        NetworkAclId: 
          Ref: "networkacl001"
        SubnetId: 
          Ref: "subnetpublic1b"
    subnetacl8: 
      Type: "AWS::EC2::SubnetNetworkAclAssociation"
      Properties: 
        NetworkAclId: 
          Ref: "networkacl001"
        SubnetId: 
          Ref: "subnetpublic1a"
    gw4: 
      Type: "AWS::EC2::VPCGatewayAttachment"
      Properties: 
        VpcId: 
          Ref: "researchvpc"
        InternetGatewayId: 
          Ref: "researchigw"
    subnetroute11: 
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties: 
        RouteTableId: 
          Ref: "researchmainroutetable"
        SubnetId: 
          Ref: "subnetpublic1b"
    subnetroute12: 
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties: 
        RouteTableId: 
          Ref: "researchmainroutetable"
        SubnetId: 
          Ref: "subnetpublic1a"
    route5: 
      Type: "AWS::EC2::Route"
      Properties: 
        DestinationCidrBlock: "0.0.0.0/0"
        RouteTableId: 
          Ref: "researchmainroutetable"
        GatewayId: 
          Ref: "researchigw"
      DependsOn: "gw4"
    dchpassoc4: 
      Type: "AWS::EC2::VPCDHCPOptionsAssociation"
      Properties: 
        VpcId: 
          Ref: "researchvpc"
        DhcpOptionsId: 
          Ref: "researchdopt01"
    ingress14: 
      Type: "AWS::EC2::SecurityGroupIngress"
      Properties: 
        GroupId: 
          Ref: "sgdefault"
        IpProtocol: "-1"
        SourceSecurityGroupId: 
          Ref: "sgdefault"
        SourceSecurityGroupOwnerId: "056834652370"
    ingress15: 
      Type: "AWS::EC2::SecurityGroupIngress"
      Properties: 
        GroupId: 
          Ref: "sgResearchVPCAccessSG"
        IpProtocol: "tcp"
        FromPort: "80"
        ToPort: "80"
        CidrIp: "0.0.0.0/0"
    ingress16: 
      Type: "AWS::EC2::SecurityGroupIngress"
      Properties: 
        GroupId: 
          Ref: "sgResearchVPCAccessSG"
        IpProtocol: "tcp"
        FromPort: "22"
        ToPort: "22"
        CidrIp: "0.0.0.0/0"
    ingress17: 
      Type: "AWS::EC2::SecurityGroupIngress"
      Properties: 
        GroupId: 
          Ref: "sgResearchVPCAccessSG"
        IpProtocol: "tcp"
        FromPort: "3389"
        ToPort: "3389"
        CidrIp: "0.0.0.0/0"
    ingress18: 
      Type: "AWS::EC2::SecurityGroupIngress"
      Properties: 
        GroupId: 
          Ref: "sgResearchVPCAccessSG"
        IpProtocol: "tcp"
        FromPort: "443"
        ToPort: "443"
        CidrIp: "0.0.0.0/0"
    ingress19: 
      Type: "AWS::EC2::SecurityGroupIngress"
      Properties: 
        GroupId: 
          Ref: "sgResearchVPCAccessSG"
        IpProtocol: "icmp"
        FromPort: "-1"
        ToPort: "-1"
        CidrIp: "0.0.0.0/0"
    egress6: 
      Type: "AWS::EC2::SecurityGroupEgress"
      Properties: 
        GroupId: 
          Ref: "sgdefault"
        IpProtocol: "-1"
        CidrIp: "0.0.0.0/0"
    egress7: 
      Type: "AWS::EC2::SecurityGroupEgress"
      Properties: 
        GroupId: 
          Ref: "sgResearchVPCAccessSG"
        IpProtocol: "-1"
        CidrIp: "0.0.0.0/0"
  Description: "Booth Research VPC"

